#!/usr/bin/ruby

def main
    case ARGV[0] 
    when "print-fasta-sequences"
        printFastaSequences(ARGV[1])
    when "print-fasta-stats"
        printFastaStats(ARGV[1])
    when "list-kmers"
        puts arrayKmers(ARGV[2])
    when "common-kmers"
        puts commonKmers[1]
    when "ratio-common-kmers"
        ratioCommonKmers
    when "random-mutations"
        randomMutation
    when "f"
        randomMutation
    else
        puts "unknown function"
    end
end

def parseFasta (argv)
    File.read(argv).split("\n", 2)
end

def genom (argv)
    parseFasta(argv).last.delete("\n")
end

def printFastaSequences (argv)
    puts genom(argv)
end

def printFastaStats (argv)
    id = parseFasta[0][1..-1]
    size = genom(argv).length
    puts "#{id} #{size}"
end

def arrayKmers (argv)
    s = ""
    n = ARGV[1].to_i
    genomKmers = []
    genom(argv).each_char do |c|
        s += c
        if s.length == n
            genomKmers.push(s[0..(n - 1)])
            s = s[1..(n - 1)]
        end
    end
    genomKmers
end 

def commonKmers
    array1 = arrayKmers(ARGV[2])
    array2 = arrayKmers(ARGV[3])
    commons = []
    for kmer in array1.each
        if array2.include? kmer
            commons.push(kmer)
        end
    end
    [array1, commons]
end

def ratioCommonKmers
    size1 = commonKmers[0].size
    sizeCommon = commonKmers[1].size
    puts sizeCommon.to_f/size1.to_f
end

def changeLetter (argv, rand)
    alphabet = ["A","C","G","T"]
    letter = genom(argv)[rand]
    puts letter
    puts rand
    print letter = alphabet.reject {|l| l == letter}.shuffle[0]
    genom(argv)[rand] = letter
end

def randomMutation 
    j = 0
    i = ARGV[1].to_i
    name = ARGV[2].split(".",2)[0] + "-mutant-" + ARGV[1] + ".txt"
    out_file = File.new(name, "w")
    in_file = open(ARGV[2])
    out_file.puts(">" + name.split(".",2)[0])
    i.times do
        rand = rand(0..(genom(ARGV[2]).length)-1)
        if rand == 0
            out_file.print(changeLetter(ARGV[2],rand))
        else
            out_file.print(genom(ARGV[2])[0..rand-1])
            out_file.print(changeLetter(ARGV[2],rand))
        end
        if rand != genom(ARGV[2]).length)-1
            out_file.print(genom(ARGV[2])[rand..(genom(ARGV[2]).length)-1])
        end
    end
end


main



