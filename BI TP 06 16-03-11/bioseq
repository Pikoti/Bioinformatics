#!/usr/bin/python

import sys
from Bio import SeqIO

def main(cmd): {
    "search-fasta-naive" : lambda : searchFastaNaive(sys.argv[2], sys.argv[3]),
    "suffix-array-naive" : lambda : cmd2(sys.argv[2]),
    "bwt"                : lambda : cmd3(sys.argv[2]),
    "unbwt"              : lambda : cmd4(sys.argv[2]),
    "suffix-array"       : lambda : cmd5(sys.argv[2]),
    "match-bwt"          : lambda : cmd6(sys.argv[2], sys.argv[3])
}[cmd]()

def cmd2(g):
    g = fasta2genom(g)
    xs = suffixArrayNaive(g)
    xs = map(str, xs)
    print " ".join(xs)

def cmd3(f):
    g = fasta2genom(f)
    print bwt(g)

def cmd4(f):
    s = bwt2string(f)
    print unbwt(s)

def cmd5(g):
    g = fasta2genom(g)
    xs = suffixArray(g)
    xs = map(str, xs)
    print " ".join(xs)

def cmd6(bwt, r):
    bwt = bwt2string(bwt)
    print matchBwt(bwt, r)

def fasta2genom(f):
    fh = open(f, "r")
    g = list(SeqIO.parse(fh, "fasta"))[0].seq
    fh.close()
    return g

def bwt2string(f):
    fh = open(f, "r")
    s = fh.readline()[0:-1]
    fh.close()
    return s

def C(x, bwt):
    n = 0
    for c in bwt :
        if c < x :
            n = n + 1
    return n

def rank(i, x, bwt):
    n = 0
    sliceBwt = bwt[0:i]
    for c in sliceBwt :
        if c == x :
            n = n + 1
    return n

def matchBwt(bwt, r):
    s = 1
    t = len(bwt)
    for i in reversed(range(len(r))):
        s = C(r[i], bwt) + rank(s-1, r[i], bwt) + 1
        t = C(r[i], bwt) + rank(t, r[i], bwt)
    if s <= t :
        return "Found" 

def suffixArray(g):
    return sorted(
        range(len(g)), 
        cmp=lambda x, y : cmp(g[x:], g[y:])
    )

def suffixArrayNaive(g):
    l = []
    gn = len(g)
    for i in range(gn) :
        l.append((i, g[i:gn]))
    return map(
        lambda pair : pair[0], 
        sorted(l, key=lambda pair : pair[1])
    )

def searchFastaNaive(g, r):
    g = fasta2genom(g)
    gn = len(g)
    rn = len(r)
    for i in range(gn) :
        if g[i:i+rn] == r :
            sys.stdout.write(str(i) + " ")

def bwt(g):
    g = str(g)
    idxs = suffixArray(g)
    bwt = map(lambda idx : ("$" + g[0:idx])[idx], idxs)
    bwt = "".join(bwt)
    bwt = g[-1] + bwt
    return bwt

def unbwt(s):
    t = map(lambda c : c, s)
    for i in range(len(s) - 1) :
        t = sorted(t)
        t = map(lambda (i, ti) : s[i] + ti, enumerate(t))
    return next((x for x in t if x[-1] == '$'), None)[0:-1]

    


main(sys.argv[1])
